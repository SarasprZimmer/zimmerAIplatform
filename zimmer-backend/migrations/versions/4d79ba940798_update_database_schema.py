"""Update database schema

Revision ID: 4d79ba940798
Revises: 3f12e8f73391
Create Date: 2025-09-17 12:44:28.018112

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4d79ba940798'
down_revision: Union[str, None] = '3f12e8f73391'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backup_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backup_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('success', 'failed', name='backupstatus'), nullable=False),
    sa.Column('storage_location', sa.String(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_backup_logs'))
    )
    op.create_index(op.f('ix_backup_logs_id'), 'backup_logs', ['id'], unique=False)
    op.create_table('discount_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('percent_off', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('max_redemptions', sa.Integer(), nullable=True),
    sa.Column('per_user_limit', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('percent_off >= 0 AND percent_off <= 100', name=op.f('ck_discount_codes_ck_discount_percent_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_discount_codes'))
    )
    op.create_index(op.f('ix_discount_codes_code'), 'discount_codes', ['code'], unique=True)
    op.create_table('discount_code_automations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discount_id', sa.Integer(), nullable=False),
    sa.Column('automation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['automation_id'], ['automations.id'], name=op.f('fk_discount_code_automations_automation_id_automations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['discount_id'], ['discount_codes.id'], name=op.f('fk_discount_code_automations_discount_id_discount_codes'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_discount_code_automations')),
    sa.UniqueConstraint('discount_id', 'automation_id', name='uq_discount_automation')
    )
    op.create_index(op.f('ix_discount_code_automations_automation_id'), 'discount_code_automations', ['automation_id'], unique=False)
    op.create_index(op.f('ix_discount_code_automations_discount_id'), 'discount_code_automations', ['discount_id'], unique=False)
    op.create_table('email_verification_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=128), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_email_verification_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_verification_tokens'))
    )
    op.create_index(op.f('ix_email_verification_tokens_token'), 'email_verification_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_email_verification_tokens_user_id'), 'email_verification_tokens', ['user_id'], unique=False)
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_password_reset_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password_reset_tokens'))
    )
    op.create_index(op.f('ix_password_reset_tokens_id'), 'password_reset_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_password_reset_tokens_token'), 'password_reset_tokens', ['token'], unique=True)
    op.create_table('twofactor_recovery_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('code_hash', sa.String(length=128), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_twofactor_recovery_codes_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_twofactor_recovery_codes'))
    )
    op.create_index(op.f('ix_twofactor_recovery_codes_code_hash'), 'twofactor_recovery_codes', ['code_hash'], unique=False)
    op.create_index(op.f('ix_twofactor_recovery_codes_user_id'), 'twofactor_recovery_codes', ['user_id'], unique=False)
    op.create_table('discount_redemptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('automation_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('amount_before', sa.Integer(), nullable=False),
    sa.Column('amount_discount', sa.Integer(), nullable=False),
    sa.Column('amount_after', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['automation_id'], ['automations.id'], name=op.f('fk_discount_redemptions_automation_id_automations'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['discount_id'], ['discount_codes.id'], name=op.f('fk_discount_redemptions_discount_id_discount_codes'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_discount_redemptions_payment_id_payments'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_discount_redemptions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_discount_redemptions'))
    )
    op.create_index(op.f('ix_discount_redemptions_automation_id'), 'discount_redemptions', ['automation_id'], unique=False)
    op.create_index(op.f('ix_discount_redemptions_discount_id'), 'discount_redemptions', ['discount_id'], unique=False)
    op.create_index(op.f('ix_discount_redemptions_payment_id'), 'discount_redemptions', ['payment_id'], unique=False)
    op.create_index(op.f('ix_discount_redemptions_user_id'), 'discount_redemptions', ['user_id'], unique=False)
    op.create_table('kb_status_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_automation_id', sa.Integer(), nullable=False),
    sa.Column('automation_id', sa.Integer(), nullable=False),
    sa.Column('kb_health', sa.String(), nullable=False),
    sa.Column('backup_status', sa.Boolean(), nullable=False),
    sa.Column('error_logs', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['automation_id'], ['automations.id'], name=op.f('fk_kb_status_history_automation_id_automations')),
    sa.ForeignKeyConstraint(['user_automation_id'], ['user_automations.id'], name=op.f('fk_kb_status_history_user_automation_id_user_automations')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_kb_status_history_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kb_status_history'))
    )
    op.create_index(op.f('ix_kb_status_history_id'), 'kb_status_history', ['id'], unique=False)
    op.create_table('openai_key_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('openai_key_id', sa.Integer(), nullable=False),
    sa.Column('automation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), nullable=False),
    sa.Column('completion_tokens', sa.Integer(), nullable=False),
    sa.Column('total_tokens', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('OK', 'FAIL', name='usagestatus'), nullable=False),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['automation_id'], ['automations.id'], name=op.f('fk_openai_key_usage_automation_id_automations')),
    sa.ForeignKeyConstraint(['openai_key_id'], ['openai_keys.id'], name=op.f('fk_openai_key_usage_openai_key_id_openai_keys')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_openai_key_usage_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_openai_key_usage'))
    )
    op.create_index(op.f('ix_openai_key_usage_id'), 'openai_key_usage', ['id'], unique=False)
    op.drop_table('knowledge_bases')
    op.drop_table('fallbacks')
    op.drop_table('discounts')
    op.drop_table('tokens')
    op.alter_column('automations', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('automations', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('automations', 'pricing_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('token_per_session', 'token_per_step', 'flat_fee', name='pricingtype'),
               nullable=False)
    op.alter_column('automations', 'price_per_token',
               existing_type=sa.NUMERIC(precision=10, scale=4),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('automations', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               type_=sa.Boolean(),
               nullable=False)
    op.alter_column('automations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('automations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('automations', 'health_check_url',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('automations', 'health_status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=16),
               nullable=False)
    op.alter_column('automations', 'last_health_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('automations', 'health_details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('automations', 'is_listed',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.create_index(op.f('ix_automations_health_status'), 'automations', ['health_status'], unique=False)
    op.create_index(op.f('ix_automations_id'), 'automations', ['id'], unique=False)
    op.create_index(op.f('ix_automations_is_listed'), 'automations', ['is_listed'], unique=False)
    op.drop_constraint('automations_user_id_fkey', 'automations', type_='foreignkey')
    op.drop_column('automations', 'user_id')
    op.drop_column('automations', 'is_active')
    op.alter_column('fallback_logs', 'message',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('fallback_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_fallback_logs_id'), 'fallback_logs', ['id'], unique=False)
    op.alter_column('knowledge_entries', 'category',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('knowledge_entries', 'answer',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('knowledge_entries', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_knowledge_entries_id'), 'knowledge_entries', ['id'], unique=False)
    op.alter_column('notifications', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('notifications', 'type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               nullable=False)
    op.alter_column('notifications', 'title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               nullable=False)
    op.alter_column('notifications', 'body',
               existing_type=sa.TEXT(),
               type_=sa.String(length=2000),
               existing_nullable=True)
    op.alter_column('notifications', 'data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('notifications', 'is_read',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('notifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('notifications', 'read_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.drop_constraint('notifications_user_id_fkey', 'notifications', type_='foreignkey')
    op.create_foreign_key(op.f('fk_notifications_user_id_users'), 'notifications', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('notifications', 'message')
    op.alter_column('payments', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('payments', 'automation_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('payments', 'amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('payments', 'tokens_purchased',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=False)
    op.alter_column('payments', 'method',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('payments', 'gateway',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('payments', 'transaction_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('payments', 'authority',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('payments', 'ref_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('payments', 'discount_code',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=True)
    op.alter_column('payments', 'discount_percent',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('payments', 'meta',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('payments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_payments_authority'), 'payments', ['authority'], unique=False)
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_unique_constraint(op.f('uq_payments_transaction_id'), 'payments', ['transaction_id'])
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('sessions', 'refresh_token_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=False)
    op.alter_column('sessions', 'ip_address',
               existing_type=postgresql.INET(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('sessions', 'last_used_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('sessions', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('sessions', 'revoked_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('sessions_token_key', 'sessions', type_='unique')
    op.create_index('idx_session_expiry', 'sessions', ['expires_at', 'revoked_at'], unique=False)
    op.create_index('idx_user_active_sessions', 'sessions', ['user_id', 'revoked_at'], unique=False)
    op.create_index(op.f('ix_sessions_expires_at'), 'sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_index(op.f('ix_sessions_last_used_at'), 'sessions', ['last_used_at'], unique=False)
    op.create_index(op.f('ix_sessions_refresh_token_hash'), 'sessions', ['refresh_token_hash'], unique=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.drop_column('sessions', 'token')
    op.add_column('ticket_messages', sa.Column('attachment_path', sa.String(length=512), nullable=True))
    op.add_column('ticket_messages', sa.Column('is_internal', sa.Boolean(), nullable=True))
    op.alter_column('ticket_messages', 'ticket_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ticket_messages', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ticket_messages', 'message',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('ticket_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_ticket_messages_id'), 'ticket_messages', ['id'], unique=False)
    op.alter_column('tickets', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('tickets', 'subject',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('tickets', 'message',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('tickets', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               type_=sa.Enum('OPEN', 'PENDING', 'RESOLVED', name='ticketstatus'),
               nullable=False)
    op.alter_column('tickets', 'importance',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               type_=sa.Enum('LOW', 'MEDIUM', 'IMMEDIATE', name='ticketimportance'),
               nullable=False)
    op.alter_column('tickets', 'attachment_path',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=512),
               existing_nullable=True)
    op.alter_column('tickets', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tickets', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_tickets_id'), 'tickets', ['id'], unique=False)
    op.alter_column('token_adjustments', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('token_adjustments', 'user_automation_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('token_adjustments', 'admin_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('token_adjustments', 'delta_tokens',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('token_adjustments', 'reason',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('token_adjustments', 'idempotency_key',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=64),
               existing_nullable=True)
    op.alter_column('token_adjustments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index('idx_user_automation_created', 'token_adjustments', ['user_id', 'user_automation_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_token_adjustments_admin_id'), 'token_adjustments', ['admin_id'], unique=False)
    op.create_index(op.f('ix_token_adjustments_id'), 'token_adjustments', ['id'], unique=False)
    op.create_index(op.f('ix_token_adjustments_idempotency_key'), 'token_adjustments', ['idempotency_key'], unique=True)
    op.create_index(op.f('ix_token_adjustments_related_payment_id'), 'token_adjustments', ['related_payment_id'], unique=False)
    op.create_index(op.f('ix_token_adjustments_user_automation_id'), 'token_adjustments', ['user_automation_id'], unique=False)
    op.create_index(op.f('ix_token_adjustments_user_id'), 'token_adjustments', ['user_id'], unique=False)
    op.create_unique_constraint('uq_idempotency_key', 'token_adjustments', ['idempotency_key'])
    op.create_foreign_key(op.f('fk_token_adjustments_user_automation_id_user_automations'), 'token_adjustments', 'user_automations', ['user_automation_id'], ['id'])
    op.create_foreign_key(op.f('fk_token_adjustments_related_payment_id_payments'), 'token_adjustments', 'payments', ['related_payment_id'], ['id'])
    op.create_foreign_key(op.f('fk_token_adjustments_admin_id_users'), 'token_adjustments', 'users', ['admin_id'], ['id'])
    op.drop_column('token_adjustments', 'amount')
    op.alter_column('token_usages', 'tokens_used',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('token_usages', 'usage_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('token_usages', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('token_usages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_token_usages_id'), 'token_usages', ['id'], unique=False)
    op.drop_constraint('fk_token_usages_user_automation_id', 'token_usages', type_='foreignkey')
    op.create_foreign_key(op.f('fk_token_usages_user_automation_id_user_automations'), 'token_usages', 'user_automations', ['user_automation_id'], ['id'])
    op.alter_column('user_automations', 'tokens_remaining',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_automations', 'demo_tokens',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_automations', 'is_demo_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_automations', 'demo_expired',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_automations', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_automations', 'provisioned_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('user_automations', 'integration_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_automations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_user_automations_id'), 'user_automations', ['id'], unique=False)
    op.create_unique_constraint('uq_telegram_bot_token', 'user_automations', ['telegram_bot_token'])
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               type_=sa.Enum('manager', 'technical_team', 'support_staff', 'customer', name='userrole'),
               existing_nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'email_verified_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'twofa_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'twofa_secret',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=64),
               existing_nullable=True)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_unique_constraint(op.f('uq_users_email'), 'users', ['email'])
    op.drop_column('users', 'is_admin')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('uq_users_email'), 'users', type_='unique')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'twofa_secret',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('users', 'twofa_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'email_verified_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.Enum('manager', 'technical_team', 'support_staff', 'customer', name='userrole'),
               server_default=sa.text("'user'::character varying"),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint('uq_telegram_bot_token', 'user_automations', type_='unique')
    op.drop_index(op.f('ix_user_automations_id'), table_name='user_automations')
    op.alter_column('user_automations', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_automations', 'integration_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'pending'::character varying"),
               existing_nullable=True)
    op.alter_column('user_automations', 'provisioned_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('user_automations', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'active'::character varying"),
               existing_nullable=True)
    op.alter_column('user_automations', 'demo_expired',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
    op.alter_column('user_automations', 'is_demo_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
    op.alter_column('user_automations', 'demo_tokens',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('user_automations', 'tokens_remaining',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.drop_constraint(op.f('fk_token_usages_user_automation_id_user_automations'), 'token_usages', type_='foreignkey')
    op.create_foreign_key('fk_token_usages_user_automation_id', 'token_usages', 'user_automations', ['user_automation_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_token_usages_id'), table_name='token_usages')
    op.alter_column('token_usages', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('token_usages', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('token_usages', 'usage_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('token_usages', 'tokens_used',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.add_column('token_adjustments', sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_token_adjustments_admin_id_users'), 'token_adjustments', type_='foreignkey')
    op.drop_constraint(op.f('fk_token_adjustments_related_payment_id_payments'), 'token_adjustments', type_='foreignkey')
    op.drop_constraint(op.f('fk_token_adjustments_user_automation_id_user_automations'), 'token_adjustments', type_='foreignkey')
    op.drop_constraint('uq_idempotency_key', 'token_adjustments', type_='unique')
    op.drop_index(op.f('ix_token_adjustments_user_id'), table_name='token_adjustments')
    op.drop_index(op.f('ix_token_adjustments_user_automation_id'), table_name='token_adjustments')
    op.drop_index(op.f('ix_token_adjustments_related_payment_id'), table_name='token_adjustments')
    op.drop_index(op.f('ix_token_adjustments_idempotency_key'), table_name='token_adjustments')
    op.drop_index(op.f('ix_token_adjustments_id'), table_name='token_adjustments')
    op.drop_index(op.f('ix_token_adjustments_admin_id'), table_name='token_adjustments')
    op.drop_index('idx_user_automation_created', table_name='token_adjustments')
    op.alter_column('token_adjustments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('token_adjustments', 'idempotency_key',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('token_adjustments', 'reason',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('token_adjustments', 'delta_tokens',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('token_adjustments', 'admin_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('token_adjustments', 'user_automation_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('token_adjustments', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_tickets_id'), table_name='tickets')
    op.alter_column('tickets', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tickets', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tickets', 'attachment_path',
               existing_type=sa.String(length=512),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('tickets', 'importance',
               existing_type=sa.Enum('LOW', 'MEDIUM', 'IMMEDIATE', name='ticketimportance'),
               server_default=sa.text("'medium'::character varying"),
               type_=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('tickets', 'status',
               existing_type=sa.Enum('OPEN', 'PENDING', 'RESOLVED', name='ticketstatus'),
               server_default=sa.text("'open'::character varying"),
               type_=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('tickets', 'message',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('tickets', 'subject',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('tickets', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_ticket_messages_id'), table_name='ticket_messages')
    op.alter_column('ticket_messages', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('ticket_messages', 'message',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('ticket_messages', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ticket_messages', 'ticket_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('ticket_messages', 'is_internal')
    op.drop_column('ticket_messages', 'attachment_path')
    op.add_column('sessions', sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_refresh_token_hash'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_last_used_at'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_expires_at'), table_name='sessions')
    op.drop_index('idx_user_active_sessions', table_name='sessions')
    op.drop_index('idx_session_expiry', table_name='sessions')
    op.create_unique_constraint('sessions_token_key', 'sessions', ['token'])
    op.alter_column('sessions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('sessions', 'revoked_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('sessions', 'expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('sessions', 'last_used_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('sessions', 'ip_address',
               existing_type=sa.Text(),
               type_=postgresql.INET(),
               existing_nullable=True)
    op.alter_column('sessions', 'refresh_token_hash',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('uq_payments_transaction_id'), 'payments', type_='unique')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_authority'), table_name='payments')
    op.alter_column('payments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('payments', 'meta',
               existing_type=sa.Text(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('payments', 'discount_percent',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=True)
    op.alter_column('payments', 'discount_code',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('payments', 'ref_id',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('payments', 'authority',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('payments', 'transaction_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('payments', 'gateway',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('payments', 'method',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('payments', 'tokens_purchased',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=True)
    op.alter_column('payments', 'amount',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
    op.alter_column('payments', 'automation_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('payments', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('notifications', sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_notifications_user_id_users'), 'notifications', type_='foreignkey')
    op.create_foreign_key('notifications_user_id_fkey', 'notifications', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.alter_column('notifications', 'read_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('notifications', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('notifications', 'is_read',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               nullable=True)
    op.alter_column('notifications', 'data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('notifications', 'body',
               existing_type=sa.String(length=2000),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('notifications', 'title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('notifications', 'type',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('notifications', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_knowledge_entries_id'), table_name='knowledge_entries')
    op.alter_column('knowledge_entries', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('knowledge_entries', 'answer',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('knowledge_entries', 'category',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_index(op.f('ix_fallback_logs_id'), table_name='fallback_logs')
    op.alter_column('fallback_logs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('fallback_logs', 'message',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.add_column('automations', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
    op.add_column('automations', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('automations_user_id_fkey', 'automations', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_automations_is_listed'), table_name='automations')
    op.drop_index(op.f('ix_automations_id'), table_name='automations')
    op.drop_index(op.f('ix_automations_health_status'), table_name='automations')
    op.alter_column('automations', 'is_listed',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=True)
    op.alter_column('automations', 'health_details',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('automations', 'last_health_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('automations', 'health_status',
               existing_type=sa.String(length=16),
               type_=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('automations', 'health_check_url',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('automations', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('automations', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('automations', 'status',
               existing_type=sa.Boolean(),
               server_default=sa.text("'active'::character varying"),
               type_=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('automations', 'price_per_token',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=4),
               nullable=True)
    op.alter_column('automations', 'pricing_type',
               existing_type=sa.Enum('token_per_session', 'token_per_step', 'flat_fee', name='pricingtype'),
               type_=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('automations', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('automations', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tokens_pkey')
    )
    op.create_table('discounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('max_uses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('used_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='discounts_pkey'),
    sa.UniqueConstraint('code', name='discounts_code_key')
    )
    op.create_table('fallbacks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], name='fallbacks_client_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='fallbacks_pkey')
    )
    op.create_table('knowledge_bases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='knowledge_bases_pkey')
    )
    op.drop_index(op.f('ix_openai_key_usage_id'), table_name='openai_key_usage')
    op.drop_table('openai_key_usage')
    op.drop_index(op.f('ix_kb_status_history_id'), table_name='kb_status_history')
    op.drop_table('kb_status_history')
    op.drop_index(op.f('ix_discount_redemptions_user_id'), table_name='discount_redemptions')
    op.drop_index(op.f('ix_discount_redemptions_payment_id'), table_name='discount_redemptions')
    op.drop_index(op.f('ix_discount_redemptions_discount_id'), table_name='discount_redemptions')
    op.drop_index(op.f('ix_discount_redemptions_automation_id'), table_name='discount_redemptions')
    op.drop_table('discount_redemptions')
    op.drop_index(op.f('ix_twofactor_recovery_codes_user_id'), table_name='twofactor_recovery_codes')
    op.drop_index(op.f('ix_twofactor_recovery_codes_code_hash'), table_name='twofactor_recovery_codes')
    op.drop_table('twofactor_recovery_codes')
    op.drop_index(op.f('ix_password_reset_tokens_token'), table_name='password_reset_tokens')
    op.drop_index(op.f('ix_password_reset_tokens_id'), table_name='password_reset_tokens')
    op.drop_table('password_reset_tokens')
    op.drop_index(op.f('ix_email_verification_tokens_user_id'), table_name='email_verification_tokens')
    op.drop_index(op.f('ix_email_verification_tokens_token'), table_name='email_verification_tokens')
    op.drop_table('email_verification_tokens')
    op.drop_index(op.f('ix_discount_code_automations_discount_id'), table_name='discount_code_automations')
    op.drop_index(op.f('ix_discount_code_automations_automation_id'), table_name='discount_code_automations')
    op.drop_table('discount_code_automations')
    op.drop_index(op.f('ix_discount_codes_code'), table_name='discount_codes')
    op.drop_table('discount_codes')
    op.drop_index(op.f('ix_backup_logs_id'), table_name='backup_logs')
    op.drop_table('backup_logs')
    # ### end Alembic commands ###
