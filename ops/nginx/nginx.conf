worker_processes auto;
events { worker_connections 1024; }

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;

  # gzip
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss image/svg+xml;

  # rate limiting (basic)
  limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;

  # common headers
  map $http_x_forwarded_proto $origin_proto {
    default $scheme;
    https https;
  }

  upstream backend_upstream { server backend:8000; }
  upstream user_panel_upstream { server user_panel:3000; }
  upstream admin_dashboard_upstream { server admin_dashboard:3000; }

  # API: api.zimmerai.com
  server {
    listen 80;
    server_name api.zimmerai.com;

    location / {
      proxy_pass http://backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $origin_proto;

      # Rate limit on API
      limit_req zone=api_limit burst=10 nodelay;

      # Security headers
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
      add_header Referrer-Policy no-referrer-when-downgrade;
      add_header X-XSS-Protection "1; mode=block";
    }
  }

  # User Panel: panel.zimmerai.com
  server {
    listen 80;
    server_name panel.zimmerai.com;

    location / {
      proxy_pass http://user_panel_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $origin_proto;
    }
  }

  # Admin Dashboard: dashboard.zimmerai.com
  server {
    listen 80;
    server_name dashboard.zimmerai.com;

    location / {
      proxy_pass http://admin_dashboard_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $origin_proto;
    }
  }
}
